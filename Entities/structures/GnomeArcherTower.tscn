[gd_scene load_steps=10 format=2]

[ext_resource path="res://Scripts/ArcherTower.gd" type="Script" id=1]
[ext_resource path="res://Textures/gnome_archer_tower.png" type="Texture" id=2]
[ext_resource path="res://Textures/gnome_archer.png" type="Texture" id=3]

[sub_resource type="Animation" id=1]
resource_name = "attack"
length = 0.7
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite/GnomeArcher:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, -24 ), Vector2( 2.5, -24 ), Vector2( 0, -24 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite/GnomeArcher:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 6.0, 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite/GnomeArcher:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1 ), Vector2( 1, 1 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.6 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "attack"
} ]
}

[sub_resource type="Animation" id=2]
resource_name = "idle"
length = 1.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite/GnomeArcher:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.3, 0.5, 0.7, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 2.0, 0.0, 0.0, -2.0, 0.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite/GnomeArcher:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.3, 0.5, 0.7, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, -24 ), Vector2( 0, -26 ), Vector2( 0, -24 ), Vector2( 0, -24 ), Vector2( 0, -26 ), Vector2( 0, -24 ) ]
}

[sub_resource type="Animation" id=5]
resource_name = "die"
length = 0.1

[sub_resource type="Animation" id=6]
resource_name = "on_hit"
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.3 ),
"transitions": PoolRealArray( 0.133972, 0.164938, 1.18921 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="CircleShape2D" id=4]
radius = 873.0

[sub_resource type="CapsuleShape2D" id=3]
radius = 22.0
height = 6.0

[node name="ArcherTower" type="KinematicBody2D"]
script = ExtResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 0, -10 )
texture = ExtResource( 2 )

[node name="GnomeArcher" type="Sprite" parent="Sprite"]
position = Vector2( 0, -24 )
texture = ExtResource( 3 )
offset = Vector2( 0, 29.622 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/attack = SubResource( 1 )
anims/idle = SubResource( 2 )

[node name="StructureEffects" type="AnimationPlayer" parent="."]
anims/die = SubResource( 5 )
anims/on_hit = SubResource( 6 )

[node name="DetectionRange" type="Area2D" parent="."]
monitorable = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="DetectionRange"]
shape = SubResource( 4 )

[node name="Hitbox" type="CollisionShape2D" parent="."]
position = Vector2( 0, 7 )
shape = SubResource( 3 )

[connection signal="body_entered" from="DetectionRange" to="." method="_on_DetectionRange_body_entered"]
[connection signal="body_exited" from="DetectionRange" to="." method="_on_DetectionRange_body_exited"]
